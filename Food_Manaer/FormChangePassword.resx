<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>